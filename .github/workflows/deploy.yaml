name: CI/CD MA Family Budget

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/registry"
  BACKEND_IMAGE: "ma-family-budget-backend"
  FRONTEND_IMAGE: "ma-family-budget-frontend"
  BACKEND_CONTAINER: "ma-family-budget-backend-container"
  FRONTEND_CONTAINER: "ma-family-budget-frontend-container"

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    env:
      VITE_APP_API_URL: ${{ secrets.VITE_APP_API_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate unified tag
        id: tag
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)-$(date +%Y%m%d-%H%M%S)
          echo "tag=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "üè∑Ô∏è Generated tag: ${TAG_NAME}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Selectel Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Backend Image
        run: |

          docker buildx build \
            --no-cache \
            --build-arg VITE_APP_API_URL=$VITE_APP_API_URL \
            --push \
            --tag $REGISTRY/$BACKEND_IMAGE:${{ steps.tag.outputs.tag }} \
            --tag $REGISTRY/$BACKEND_IMAGE:latest \
            --file backend.Dockerfile \
            .

      - name: Build and Push Frontend Image
        run: |
          docker buildx build \
            --no-cache \
            --build-arg VITE_APP_API_URL=$VITE_APP_API_URL \
            --push \
            --tag $REGISTRY/$FRONTEND_IMAGE:${{ steps.tag.outputs.tag }} \
            --tag $REGISTRY/$FRONTEND_IMAGE:latest \
            --file frontend.Dockerfile \
            .
  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to Cloud
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: BACKEND_IMAGE,FRONTEND_IMAGE,REGISTRY,BACKEND_CONTAINER,FRONTEND_CONTAINER
          script: |
            # Set up variables
            TAG_NAME="${{ needs.image-build-and-push.outputs.tag }}"
            
            echo "üöÄ Starting deployment..."
            echo "üì¶ Backend: $REGISTRY/$BACKEND_IMAGE:$TAG_NAME"
            echo "üì¶ Frontend: $REGISTRY/$FRONTEND_IMAGE:$TAG_NAME"
            
            # Login into Selectel Registry
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
            
            # Pull new images
            echo "üì• Pulling new images..."
            docker pull $REGISTRY/$BACKEND_IMAGE:$TAG_NAME
            docker pull $REGISTRY/$FRONTEND_IMAGE:$TAG_NAME
            
            # Navigate to project directory
            cd ~/ma-family-budget
            
            # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker Compose
            echo "üöÄ Running docker compose..."
            ../deploy.sh $TAG_NAME
            
            # Verify deployment
            echo "‚úÖ Verifying deployment..."
            docker ps | grep ma-family-budget || echo "Warning: containers not found"
            
            echo "üéâ Deployment completed!"